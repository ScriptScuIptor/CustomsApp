import java.sql.*;

public class DatabaseManager {
    private static final String URL = "jdbc:postgresql://localhost:5432/customs";
    private static final String USER = "postgres";
    private static final String PASSWORD = "admin";

    public static void addDriver(String name, String licenseNumber) {
        String query = "INSERT INTO drivers (full_name, license_number) VALUES (?, ?)";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement pstmt = conn.prepareStatement(query)) {

            pstmt.setString(1, name);
            pstmt.setString(2, licenseNumber);
            pstmt.executeUpdate();
            System.out.println("‚úÖ –í–æ–¥–∏—Ç–µ–ª—å " + name + " –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.");
        } catch (SQLException e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤–æ–¥–∏—Ç–µ–ª—è: " + e.getMessage());
        }
    }

    public static void getAllDrivers() {
        String query = "SELECT * FROM drivers";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            if (!rs.isBeforeFirst()) {
                System.out.println("üìã –°–ø–∏—Å–æ–∫ –≤–æ–¥–∏—Ç–µ–ª–µ–π –ø—É—Å—Ç.");
                return;
            }

            System.out.println("üìã –°–ø–∏—Å–æ–∫ –≤–æ–¥–∏—Ç–µ–ª–µ–π:");
            while (rs.next()) {
                int id = rs.getInt("id");
                String name = rs.getString("full_name");
                String licenseNumber = rs.getString("license_number");
                System.out.println("ID: " + id + ", –ò–º—è: " + name + ", –í–æ–¥. —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ: " + licenseNumber);
            }
        } catch (SQLException e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –≤–æ–¥–∏—Ç–µ–ª–µ–π: " + e.getMessage());
        }
    }

    public static void deleteDriver(int id) {
        String query = "DELETE FROM drivers WHERE id = ?";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement pstmt = conn.prepareStatement(query)) {

            pstmt.setInt(1, id);
            int affectedRows = pstmt.executeUpdate();

            if (affectedRows > 0) {
                System.out.println("‚úÖ –í–æ–¥–∏—Ç–µ–ª—å —Å ID " + id + " —É–¥–∞–ª–µ–Ω.");
            } else {
                System.out.println("‚ö† –í–æ–¥–∏—Ç–µ–ª—å —Å ID " + id + " –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            }
        } catch (SQLException e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–æ–¥–∏—Ç–µ–ª—è: " + e.getMessage());
        }
    }

    public static User findUserByUsername(String username) {
        String query = "SELECT u.id, u.username, u.password_hash, r.role_name " +
                "FROM users u JOIN roles r ON u.role_id = r.id " +
                "WHERE u.username = ?";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement pstmt = conn.prepareStatement(query)) {

            pstmt.setString(1, username);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                return new User(
                        rs.getInt("id"),
                        rs.getString("username"),
                        rs.getString("password_hash"),
                        rs.getString("role_name")
                );
            }
        } catch (SQLException e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + e.getMessage());
        }
        return null;
    }

    public static void main(String[] args) {
        getAllDrivers();
    }
}